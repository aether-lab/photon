#############################################################################
# Makefile for building: SchlierenVis
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Thu Oct  1 14:43:28 2015
# Project:  SchlierenVis.pro
# Template: app
# Command: $(QMAKE) -o Makefile SchlierenVis.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I../schlieren-0.2.0-debug/include -I../cuda-samples/NVIDIA_CUDA-7.0_Samples/common/inc -I../cuda-samples/cuda/include -I/usr/local/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = -L/home/barracuda/a/lrajendr/SchlierenRayVis/SchlierenRay/schlieren-0.2.0-debug/lib
LIBS     = $(SUBLIBS) -L/home/barracuda/a/lrajendr/SchlierenRayVis/SchlierenRay/schlieren-0.2.0-debug/bin -L/usr/local/bin -L$(QTDIR)/lib -L/home/barracuda/a/lrajendr/SchlierenRayVis/SchlierenRay/schlieren-0.2.0-debug/lib -lSchlieren -lteem -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mainwindow.h \
		glview.h \
		filter.h \
		painterwidget.h
SOURCES = main.cpp \
		mainwindow.cpp \
		glview.cpp \
		filter.cpp \
		painterwidget.cpp
OBJECTS = main.o \
		mainwindow.o \
		glview.o \
		filter.o \
		painterwidget.o \
		mainwindow.o \
		filter.o
FORMS = mainwindow.ui \
		filter.ui
UICDECLS = mainwindow.h \
		filter.h
UICIMPLS = mainwindow.cpp \
		filter.cpp
SRCMOC   = moc_mainwindow.cpp \
		moc_glview.cpp \
		moc_filter.cpp \
		moc_painterwidget.cpp \
		moc_mainwindow.cpp \
		moc_filter.cpp
OBJMOC = moc_mainwindow.o \
		moc_glview.o \
		moc_filter.o \
		moc_painterwidget.o \
		moc_mainwindow.o \
		moc_filter.o
DIST	   = SchlierenVis.pro
QMAKE_TARGET = SchlierenVis
DESTDIR  = 
TARGET   = SchlierenVis

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: SchlierenVis.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile SchlierenVis.pro
qmake: 
	@$(QMAKE) -o Makefile SchlierenVis.pro

dist: 
	@mkdir -p .tmp/SchlierenVis && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/SchlierenVis/ && ( cd `dirname .tmp/SchlierenVis` && $(TAR) SchlierenVis.tar SchlierenVis && $(GZIP) SchlierenVis.tar ) && $(MOVE) `dirname .tmp/SchlierenVis`/SchlierenVis.tar.gz . && $(DEL_FILE) -r .tmp/SchlierenVis

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp mainwindow.h \
		glview.h \
		filter.h \
		painterwidget.h

mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		glview.h \
		filter.h \
		painterwidget.h \
		mainwindow.h

glview.o: glview.cpp glview.h

filter.o: filter.cpp filter.h \
		ui_filter.h \
		painterwidget.h \
		glview.h \
		filter.h

painterwidget.o: painterwidget.cpp painterwidget.h

mainwindow.h: mainwindow.ui 
	$(UIC) mainwindow.ui -o mainwindow.h

mainwindow.cpp: mainwindow.h mainwindow.ui 
	$(UIC) mainwindow.ui -i mainwindow.h -o mainwindow.cpp

filter.h: filter.ui 
	$(UIC) filter.ui -o filter.h

filter.cpp: filter.h filter.ui 
	$(UIC) filter.ui -i filter.h -o filter.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		glview.h \
		filter.h \
		painterwidget.h \
		mainwindow.h

filter.o: filter.cpp filter.h \
		ui_filter.h \
		painterwidget.h \
		glview.h \
		filter.h

moc_mainwindow.o: moc_mainwindow.cpp  mainwindow.h glview.h \
		filter.h \
		painterwidget.h

moc_glview.o: moc_glview.cpp  glview.h 

moc_filter.o: moc_filter.cpp  filter.h painterwidget.h \
		glview.h

moc_painterwidget.o: moc_painterwidget.cpp  painterwidget.h 

moc_mainwindow.o: moc_mainwindow.cpp  mainwindow.h glview.h \
		filter.h \
		painterwidget.h

moc_filter.o: moc_filter.cpp  filter.h painterwidget.h \
		glview.h

moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

moc_glview.cpp: $(MOC) glview.h
	$(MOC) glview.h -o moc_glview.cpp

moc_filter.cpp: $(MOC) filter.h
	$(MOC) filter.h -o moc_filter.cpp

moc_painterwidget.cpp: $(MOC) painterwidget.h
	$(MOC) painterwidget.h -o moc_painterwidget.cpp

moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

moc_filter.cpp: $(MOC) filter.h
	$(MOC) filter.h -o moc_filter.cpp

####### Install

install:  

uninstall:  

